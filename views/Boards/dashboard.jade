mixin histogram(id, title, data)
    div(id="histogram-" + id)
    script(type="text/javascript").
        var data = [{
            nbinsx: 10,
            x: !{JSON.stringify(data)},
            type: 'histogram'
        }];
        var layout = {
            title: '#{title}',
            xaxis: { title: 'Days' },
            yaxis: { title: 'Number of Items' },
            barmode: 'overlay',
            bargap: 0.05,
            bargroupgap: 0.3
        };
        Plotly.newPlot('histogram-#{id}', data, layout);

mixin card-table(cards, lists, labels)
    div.row
        div.col-md-12
            table.table.table-striped.table-condensed.card-table
                thead
                    tr
                        th Name
                        th Labels
                        th Reaction
                        th Cycle
                        th Lead
                        each list in lists
                            th(title=list.name)
                                span.ellipsis!=list.name
                tbody
                    each card in cards
                        tr
                            td!=card.name
                            td
                                each idLabel in card.idLabels
                                    span.label(class=labels[idLabel].color)!=labels[idLabel].name
                                    &nbsp;
                            td.days-cell(title="Reaction Time")!=(card.flow.reaction || 0).toFixed(2)
                            td.days-cell(title="Cycle Time")!=(card.flow.cycle || 0).toFixed(2)
                            td.days-cell(title="Lead Time")!=(card.flow.lead || 0).toFixed(2)
                            each list, id in lists
                                td.days-cell(title=list.name)!=(card.times[id] || 0).toFixed(2)

mixin list-time-table(times)
    table.table.table-striped(style="width: 100%")
        thead
            tr
                th Count
                th Mean
                th Median
                if times.min != undefined
                    th Min
                if times.max != undefined
                    th Max
        tbody
            tr
                td.items-cell!=(times.count || 0).toFixed(0)
                td.days-cell!=(times.mean || 0).toFixed(2)
                td.days-cell!=(times.median || 0).toFixed(2)
                if times.min != undefined
                    td.days-cell!=(times.min || 0).toFixed(2)
                if times.max != undefined
                    td.days-cell!=(times.max || 0).toFixed(2)

mixin metrics(id, title, data, labels)
    div.row
        div.col-md-12
            if labels
                br
                h2
                    each label, index in labels
                        span.label(class=label.color)!=label.name
                        &nbsp;
            else
                h2!=title
    if data.flow
        div.row
            div.col-md-12
                h3 Flow Metrics
        div.row
            div.col-md-4
                +histogram(id + '-reaction', 'Reaction Time', data.flow.reaction.values)
                +list-time-table(data.flow.reaction)
            div.col-md-4
                +histogram(id + '-cycle', 'Cycle Time', data.flow.cycle.values)
                +list-time-table(data.flow.cycle)
            div.col-md-4
                +histogram(id + '-lead', 'Lead Time', data.flow.lead.values)
                +list-time-table(data.flow.lead)

    div.row
        div.col-md-12
            h3 List Metrics
    div.row
        each list, listId in data.lists
            if !list.closed
                div.col-md-4
                    +histogram(id + '-' + listId, list.name, list.times.values)
                    +list-time-table(list.times)

extends ../Layout/main.jade

block head
    script(type="text/javascript").
        $(function {
            $('ul.nav-tabs').each(function() {
                $(this).tab('show');
                $('a:first', $(this)).click();
            });
            $('.card-table').DataTable({ paging: false, searching: false });
        });

block content
    div.row
        div.main.col-md-12
            ul.nav.nav-tabs(role="tablist")
                li(role="presentation" class="active"): a(href="#global" aria-controls="global" role="tab" data-toggle="tab") Global
                each element, index in data.labelFiltered
                    li(role="presentation" class="active")
                        a(href="#filtered-"+index.replace(',', '-') aria-controls="filtered-#{index.replace(',', '-')}" role="tab" data-toggle="tab")!=element.name
            div.tab-content
                div#global.tab-pane.active(role="tabpanel")
                    +metrics('global', 'Global', data.global)
                    h3 Flow Items
                    +card-table(data.global.cards, data.global.lists, data.labels)

                each element, index in data.labelFiltered
                    div.tab-pane(id="filtered-"+index.replace(',', '-') role="tabpanel")
                        +metrics(index, element.name, data.labelFiltered[index], data.labelFiltered[index].labels)
                        h3 Flow Items
                        +card-table(data.labelFiltered[index].cards, data.labelFiltered[index].lists, data.labels)
    div.row
        div.main.col-md-12
            h2 In Progress Items
            +card-table(data.inProgress.cards, data.inProgress.lists, data.labels)
